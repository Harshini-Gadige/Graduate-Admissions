{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This kernel contains Linear Regression model which predicts chance of getting admissions for the Masters program.\n",
    "Rather than focusing on creating different models, I used Linear Regression with OLS and explained steps to improve the performance of the model by changing various factors."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Import libraries.\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline \n",
    "import seaborn as sns\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_csv('/Users/harshini/Desktop/Thinkful/Data/Capstone3/Admission_Predict.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Serial No.</th>\n",
       "      <th>GRE Score</th>\n",
       "      <th>TOEFL Score</th>\n",
       "      <th>University Rating</th>\n",
       "      <th>SOP</th>\n",
       "      <th>LOR</th>\n",
       "      <th>CGPA</th>\n",
       "      <th>Research</th>\n",
       "      <th>Chance of Admit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>337</td>\n",
       "      <td>118</td>\n",
       "      <td>4</td>\n",
       "      <td>4.5</td>\n",
       "      <td>4.5</td>\n",
       "      <td>9.65</td>\n",
       "      <td>1</td>\n",
       "      <td>0.92</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>324</td>\n",
       "      <td>107</td>\n",
       "      <td>4</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.5</td>\n",
       "      <td>8.87</td>\n",
       "      <td>1</td>\n",
       "      <td>0.76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>316</td>\n",
       "      <td>104</td>\n",
       "      <td>3</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3.5</td>\n",
       "      <td>8.00</td>\n",
       "      <td>1</td>\n",
       "      <td>0.72</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>322</td>\n",
       "      <td>110</td>\n",
       "      <td>3</td>\n",
       "      <td>3.5</td>\n",
       "      <td>2.5</td>\n",
       "      <td>8.67</td>\n",
       "      <td>1</td>\n",
       "      <td>0.80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>314</td>\n",
       "      <td>103</td>\n",
       "      <td>2</td>\n",
       "      <td>2.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>8.21</td>\n",
       "      <td>0</td>\n",
       "      <td>0.65</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Serial No.  GRE Score  TOEFL Score  University Rating  SOP  LOR   CGPA  \\\n",
       "0           1        337          118                  4  4.5   4.5  9.65   \n",
       "1           2        324          107                  4  4.0   4.5  8.87   \n",
       "2           3        316          104                  3  3.0   3.5  8.00   \n",
       "3           4        322          110                  3  3.5   2.5  8.67   \n",
       "4           5        314          103                  2  2.0   3.0  8.21   \n",
       "\n",
       "   Research  Chance of Admit   \n",
       "0         1              0.92  \n",
       "1         1              0.76  \n",
       "2         1              0.72  \n",
       "3         1              0.80  \n",
       "4         0              0.65  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Check for null values.\n",
    "df.isnull().sum()\n",
    "\n",
    "# Drop 'Serial No.'\n",
    "df = df.drop('Serial No.',axis=1)\n",
    "\n",
    "# Renaming columns.\n",
    "df.columns = df.columns.str.strip()\n",
    "df.columns = df.columns.str.replace(' ','_')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['GRE_Score', 'TOEFL_Score', 'University_Rating', 'SOP', 'LOR', 'CGPA',\n",
       "       'Research', 'Chance_of_Admit'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 400 entries, 0 to 399\n",
      "Data columns (total 8 columns):\n",
      "GRE_Score            400 non-null int64\n",
      "TOEFL_Score          400 non-null int64\n",
      "University_Rating    400 non-null int64\n",
      "SOP                  400 non-null float64\n",
      "LOR                  400 non-null float64\n",
      "CGPA                 400 non-null float64\n",
      "Research             400 non-null int64\n",
      "Chance_of_Admit      400 non-null float64\n",
      "dtypes: float64(4), int64(4)\n",
      "memory usage: 25.1 KB\n"
     ]
    }
   ],
   "source": [
    "# Check if the data types are correct as per the meaning of each column.\n",
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>GRE_Score</th>\n",
       "      <th>TOEFL_Score</th>\n",
       "      <th>University_Rating</th>\n",
       "      <th>SOP</th>\n",
       "      <th>LOR</th>\n",
       "      <th>CGPA</th>\n",
       "      <th>Research</th>\n",
       "      <th>Chance_of_Admit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>400.000000</td>\n",
       "      <td>400.000000</td>\n",
       "      <td>400.000000</td>\n",
       "      <td>400.000000</td>\n",
       "      <td>400.000000</td>\n",
       "      <td>400.000000</td>\n",
       "      <td>400.000000</td>\n",
       "      <td>400.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>316.807500</td>\n",
       "      <td>107.410000</td>\n",
       "      <td>3.087500</td>\n",
       "      <td>3.400000</td>\n",
       "      <td>3.452500</td>\n",
       "      <td>8.598925</td>\n",
       "      <td>0.547500</td>\n",
       "      <td>0.724350</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>11.473646</td>\n",
       "      <td>6.069514</td>\n",
       "      <td>1.143728</td>\n",
       "      <td>1.006869</td>\n",
       "      <td>0.898478</td>\n",
       "      <td>0.596317</td>\n",
       "      <td>0.498362</td>\n",
       "      <td>0.142609</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>290.000000</td>\n",
       "      <td>92.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>6.800000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.340000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>308.000000</td>\n",
       "      <td>103.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>2.500000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>8.170000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.640000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>317.000000</td>\n",
       "      <td>107.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>3.500000</td>\n",
       "      <td>3.500000</td>\n",
       "      <td>8.610000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.730000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>325.000000</td>\n",
       "      <td>112.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>9.062500</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.830000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>340.000000</td>\n",
       "      <td>120.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>9.920000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.970000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        GRE_Score  TOEFL_Score  University_Rating         SOP         LOR  \\\n",
       "count  400.000000   400.000000         400.000000  400.000000  400.000000   \n",
       "mean   316.807500   107.410000           3.087500    3.400000    3.452500   \n",
       "std     11.473646     6.069514           1.143728    1.006869    0.898478   \n",
       "min    290.000000    92.000000           1.000000    1.000000    1.000000   \n",
       "25%    308.000000   103.000000           2.000000    2.500000    3.000000   \n",
       "50%    317.000000   107.000000           3.000000    3.500000    3.500000   \n",
       "75%    325.000000   112.000000           4.000000    4.000000    4.000000   \n",
       "max    340.000000   120.000000           5.000000    5.000000    5.000000   \n",
       "\n",
       "             CGPA    Research  Chance_of_Admit  \n",
       "count  400.000000  400.000000       400.000000  \n",
       "mean     8.598925    0.547500         0.724350  \n",
       "std      0.596317    0.498362         0.142609  \n",
       "min      6.800000    0.000000         0.340000  \n",
       "25%      8.170000    0.000000         0.640000  \n",
       "50%      8.610000    1.000000         0.730000  \n",
       "75%      9.062500    1.000000         0.830000  \n",
       "max      9.920000    1.000000         0.970000  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Descriptive statistics.\n",
    "df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x2880 with 7 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "cols = ['GRE_Score','TOEFL_Score','University_Rating','SOP','LOR','CGPA','Chance_of_Admit']\n",
    "\n",
    "plt.figure(figsize=(6,40))\n",
    "\n",
    "for i in range(len(cols)):\n",
    "    plt.subplot(7,1,i+1)\n",
    "    plt.hist(df[cols[i]])\n",
    "    plt.title(\"Distribution of \" + cols[i])\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From the above GRE_Score, TOEFL_Score and CGPA are some what normally distributed and the target variable 'Chance_of_Admit' is left skewed.<br/>\n",
    "Let us observe the correlation between the target variable and independent variables."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x2880 with 6 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "cols = ['GRE_Score','TOEFL_Score','University_Rating','SOP','LOR','CGPA']\n",
    "\n",
    "plt.figure(figsize=(6,40))\n",
    "\n",
    "for i in range(len(cols)):\n",
    "    plt.subplot(6,1,i+1)\n",
    "    plt.scatter(df['Chance_of_Admit'],df[cols[i]])\n",
    "    plt.title(\"Correlation b/w 'Chance_of_Admit' and '{}'\".format(cols[i]))\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Above plots show that there is a linear relation between target variable and GRE_Score, TOEFL_Score and CGPA. However, let us statistically confirm this using a correlation matrix."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Visualize correlation between independant variables and the target variable. Here, the target variable is 'Chance_of_Admit'\n",
    "plt.figure(figsize=(8,6))\n",
    "sns.heatmap(df.corr(),annot = True)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Chance_of_Admit      1.000000\n",
       "CGPA                 0.873289\n",
       "GRE_Score            0.802610\n",
       "TOEFL_Score          0.791594\n",
       "University_Rating    0.711250\n",
       "SOP                  0.675732\n",
       "LOR                  0.669889\n",
       "Research             0.553202\n",
       "Name: Chance_of_Admit, dtype: float64"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Correlation factors for 'Chance_of_Admit'.\n",
    "df.corr()['Chance_of_Admit'].sort_values(ascending=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "It is clear that CGPA has highest correlation with Chance_of_Admit followed by GRE_Score and TOEFL_Score. <br/>\n",
    "Also, there is a little correlation of University_Rating, SOR and LOR with the target variable."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<b><font color='blue'>Simple Linear Regression with OLS(Ordinary Least Squares).<br/></b>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn import linear_model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Coefficients: \n",
      " [ 0.00227608  0.00275344  0.00606202 -0.0019614   0.0227486   0.11987489]\n",
      "\n",
      "Intercept: \n",
      " -1.4138594435308127\n"
     ]
    }
   ],
   "source": [
    "X = df.drop(['Chance_of_Admit','Research'],axis = 1)\n",
    "Y = df['Chance_of_Admit']\n",
    "\n",
    "model = linear_model.LinearRegression()\n",
    "model.fit(X,Y)\n",
    "\n",
    "print('\\nCoefficients: \\n', model.coef_)\n",
    "print('\\nIntercept: \\n', model.intercept_)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<b>Linear regression equation with coefficients and intercept(from the above result) would be:</b><br/>\n",
    "Chance_of_Admit = 0.00227608GRE_Score + 0.00275344TOEFL_Score + 0.00606202University_Rating - 0.0019614SOP + 0.0227486LOR + 0.11987489CGPA - 1.4138594435308127<br/>\n",
    "\n",
    "But we are more interested in identifying the significance of these coefficients. We can determine this using Statistical T-test. Let us use \"statsmodels\" to get T-test, p values and many other statistical information."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<b><font color='blue'>Model1<font/>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<b>Interpreting estimated coefficients."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "import statsmodels.api as sm"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>OLS Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>     <td>Chance_of_Admit</td> <th>  R-squared:         </th> <td>   0.799</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th> <td>   0.796</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th> <td>   259.9</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>             <td>Tue, 21 May 2019</td> <th>  Prob (F-statistic):</th> <td>1.99e-133</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                 <td>11:12:39</td>     <th>  Log-Likelihood:    </th> <td>  532.59</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Observations:</th>      <td>   400</td>      <th>  AIC:               </th> <td>  -1051.</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Residuals:</th>          <td>   393</td>      <th>  BIC:               </th> <td>  -1023.</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Model:</th>              <td>     6</td>      <th>                     </th>     <td> </td>    \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>     <td> </td>    \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "          <td></td>             <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>const</th>             <td>   -1.4139</td> <td>    0.115</td> <td>  -12.247</td> <td> 0.000</td> <td>   -1.641</td> <td>   -1.187</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>GRE_Score</th>         <td>    0.0023</td> <td>    0.001</td> <td>    3.938</td> <td> 0.000</td> <td>    0.001</td> <td>    0.003</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TOEFL_Score</th>       <td>    0.0028</td> <td>    0.001</td> <td>    2.503</td> <td> 0.013</td> <td>    0.001</td> <td>    0.005</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>University_Rating</th> <td>    0.0061</td> <td>    0.005</td> <td>    1.258</td> <td> 0.209</td> <td>   -0.003</td> <td>    0.016</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SOP</th>               <td>   -0.0020</td> <td>    0.006</td> <td>   -0.350</td> <td> 0.727</td> <td>   -0.013</td> <td>    0.009</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>LOR</th>               <td>    0.0227</td> <td>    0.006</td> <td>    4.063</td> <td> 0.000</td> <td>    0.012</td> <td>    0.034</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CGPA</th>              <td>    0.1199</td> <td>    0.012</td> <td>    9.709</td> <td> 0.000</td> <td>    0.096</td> <td>    0.144</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "  <th>Omnibus:</th>       <td>93.313</td> <th>  Durbin-Watson:     </th> <td>   0.797</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Prob(Omnibus):</th> <td> 0.000</td> <th>  Jarque-Bera (JB):  </th> <td> 208.389</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Skew:</th>          <td>-1.190</td> <th>  Prob(JB):          </th> <td>5.61e-46</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Kurtosis:</th>      <td> 5.615</td> <th>  Cond. No.          </th> <td>1.20e+04</td>\n",
       "</tr>\n",
       "</table><br/><br/>Warnings:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.<br/>[2] The condition number is large, 1.2e+04. This might indicate that there are<br/>strong multicollinearity or other numerical problems."
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                            OLS Regression Results                            \n",
       "==============================================================================\n",
       "Dep. Variable:        Chance_of_Admit   R-squared:                       0.799\n",
       "Model:                            OLS   Adj. R-squared:                  0.796\n",
       "Method:                 Least Squares   F-statistic:                     259.9\n",
       "Date:                Tue, 21 May 2019   Prob (F-statistic):          1.99e-133\n",
       "Time:                        11:12:39   Log-Likelihood:                 532.59\n",
       "No. Observations:                 400   AIC:                            -1051.\n",
       "Df Residuals:                     393   BIC:                            -1023.\n",
       "Df Model:                           6                                         \n",
       "Covariance Type:            nonrobust                                         \n",
       "=====================================================================================\n",
       "                        coef    std err          t      P>|t|      [0.025      0.975]\n",
       "-------------------------------------------------------------------------------------\n",
       "const                -1.4139      0.115    -12.247      0.000      -1.641      -1.187\n",
       "GRE_Score             0.0023      0.001      3.938      0.000       0.001       0.003\n",
       "TOEFL_Score           0.0028      0.001      2.503      0.013       0.001       0.005\n",
       "University_Rating     0.0061      0.005      1.258      0.209      -0.003       0.016\n",
       "SOP                  -0.0020      0.006     -0.350      0.727      -0.013       0.009\n",
       "LOR                   0.0227      0.006      4.063      0.000       0.012       0.034\n",
       "CGPA                  0.1199      0.012      9.709      0.000       0.096       0.144\n",
       "==============================================================================\n",
       "Omnibus:                       93.313   Durbin-Watson:                   0.797\n",
       "Prob(Omnibus):                  0.000   Jarque-Bera (JB):              208.389\n",
       "Skew:                          -1.190   Prob(JB):                     5.61e-46\n",
       "Kurtosis:                       5.615   Cond. No.                     1.20e+04\n",
       "==============================================================================\n",
       "\n",
       "Warnings:\n",
       "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
       "[2] The condition number is large, 1.2e+04. This might indicate that there are\n",
       "strong multicollinearity or other numerical problems.\n",
       "\"\"\""
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# We need to manually add a constant in statsmodels' sm\n",
    "X = df.drop(['Chance_of_Admit','Research'],axis = 1)\n",
    "Y = df['Chance_of_Admit']\n",
    "\n",
    "X = sm.add_constant(X)\n",
    "model1 = sm.OLS(Y, X).fit()\n",
    "\n",
    "model1.summary()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From the above, p-values of GRE_Score, TOEFL_Score, LOR and CGPA are less than 0.05 and p-values of University_Rating and SOP are greater than 0.05.<br/>\n",
    "This implies that the coefficient of University_Rating and SOP are effectively zero from a statistical point of view. They are simply not significant, and we can say that it appears to be no relationship between Chance_of_Admit and the features (University_Rating, SOP). <br/>\n",
    "\n",
    "Let us remove these 2 variables and see if there is an improvement in the model or not."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<b><font color='blue'>Model2<font/>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>OLS Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>     <td>Chance_of_Admit</td> <th>  R-squared:         </th> <td>   0.798</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th> <td>   0.796</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th> <td>   389.9</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>             <td>Tue, 21 May 2019</td> <th>  Prob (F-statistic):</th> <td>1.12e-135</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                 <td>11:12:40</td>     <th>  Log-Likelihood:    </th> <td>  531.78</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Observations:</th>      <td>   400</td>      <th>  AIC:               </th> <td>  -1054.</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Residuals:</th>          <td>   395</td>      <th>  BIC:               </th> <td>  -1034.</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Model:</th>              <td>     4</td>      <th>                     </th>     <td> </td>    \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>     <td> </td>    \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "       <td></td>          <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>const</th>       <td>   -1.4631</td> <td>    0.106</td> <td>  -13.836</td> <td> 0.000</td> <td>   -1.671</td> <td>   -1.255</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>GRE_Score</th>   <td>    0.0023</td> <td>    0.001</td> <td>    4.023</td> <td> 0.000</td> <td>    0.001</td> <td>    0.003</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TOEFL_Score</th> <td>    0.0029</td> <td>    0.001</td> <td>    2.718</td> <td> 0.007</td> <td>    0.001</td> <td>    0.005</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>LOR</th>         <td>    0.0240</td> <td>    0.005</td> <td>    4.952</td> <td> 0.000</td> <td>    0.014</td> <td>    0.033</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CGPA</th>        <td>    0.1228</td> <td>    0.012</td> <td>   10.367</td> <td> 0.000</td> <td>    0.100</td> <td>    0.146</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "  <th>Omnibus:</th>       <td>92.083</td> <th>  Durbin-Watson:     </th> <td>   0.794</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Prob(Omnibus):</th> <td> 0.000</td> <th>  Jarque-Bera (JB):  </th> <td> 203.025</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Skew:</th>          <td>-1.180</td> <th>  Prob(JB):          </th> <td>8.20e-45</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Kurtosis:</th>      <td> 5.571</td> <th>  Cond. No.          </th> <td>1.10e+04</td>\n",
       "</tr>\n",
       "</table><br/><br/>Warnings:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.<br/>[2] The condition number is large, 1.1e+04. This might indicate that there are<br/>strong multicollinearity or other numerical problems."
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                            OLS Regression Results                            \n",
       "==============================================================================\n",
       "Dep. Variable:        Chance_of_Admit   R-squared:                       0.798\n",
       "Model:                            OLS   Adj. R-squared:                  0.796\n",
       "Method:                 Least Squares   F-statistic:                     389.9\n",
       "Date:                Tue, 21 May 2019   Prob (F-statistic):          1.12e-135\n",
       "Time:                        11:12:40   Log-Likelihood:                 531.78\n",
       "No. Observations:                 400   AIC:                            -1054.\n",
       "Df Residuals:                     395   BIC:                            -1034.\n",
       "Df Model:                           4                                         \n",
       "Covariance Type:            nonrobust                                         \n",
       "===============================================================================\n",
       "                  coef    std err          t      P>|t|      [0.025      0.975]\n",
       "-------------------------------------------------------------------------------\n",
       "const          -1.4631      0.106    -13.836      0.000      -1.671      -1.255\n",
       "GRE_Score       0.0023      0.001      4.023      0.000       0.001       0.003\n",
       "TOEFL_Score     0.0029      0.001      2.718      0.007       0.001       0.005\n",
       "LOR             0.0240      0.005      4.952      0.000       0.014       0.033\n",
       "CGPA            0.1228      0.012     10.367      0.000       0.100       0.146\n",
       "==============================================================================\n",
       "Omnibus:                       92.083   Durbin-Watson:                   0.794\n",
       "Prob(Omnibus):                  0.000   Jarque-Bera (JB):              203.025\n",
       "Skew:                          -1.180   Prob(JB):                     8.20e-45\n",
       "Kurtosis:                       5.571   Cond. No.                     1.10e+04\n",
       "==============================================================================\n",
       "\n",
       "Warnings:\n",
       "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
       "[2] The condition number is large, 1.1e+04. This might indicate that there are\n",
       "strong multicollinearity or other numerical problems.\n",
       "\"\"\""
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X = df.drop(['Chance_of_Admit','Research','University_Rating','SOP'],axis = 1)\n",
    "Y = df['Chance_of_Admit']\n",
    "\n",
    "X = sm.add_constant(X)\n",
    "model2 = sm.OLS(Y, X).fit()\n",
    "\n",
    "model2.summary()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<b>Evaluating performance by comparing <font color='blue'>model1</font> and <font color='blue'>model2"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- We can use an F-test to compare two models if one of them is nested within the other. That is, if the feature set in a model is a subset of the feature set of the other, then we can use F-test. In this case, we say that the model with higher F statistic is superior to the other one.\n",
    "- We can also use adjusted R-squared. The higher adjusted R-squared, the better the model explains the target variable.\n",
    "- Using information criteria is also a common way of comparing different models and selecting the best one. Here, the two information criteria are Akaike Information Criterion (AIC) and Bayesian Information Criterion (BIC). Both take into consideration the sum of the squared errors (SSE), the sample size, and the number of parameters. The lower AIC and BIC, the better the model explains the target variable."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "performance_stats = pd.DataFrame()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "# This information is drawn from model1 and model2 summary tables above.\n",
    "performance_stats['F-statistic'] = [259.9,389.9]\n",
    "performance_stats['Adj_R-squared'] = [0.796,0.796]\n",
    "performance_stats['AIC'] = [-1051,-1054]\n",
    "performance_stats['BIC'] = [-1023,-1034]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>F-statistic</th>\n",
       "      <th>Adj_R-squared</th>\n",
       "      <th>AIC</th>\n",
       "      <th>BIC</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>259.9</td>\n",
       "      <td>0.796</td>\n",
       "      <td>-1051</td>\n",
       "      <td>-1023</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>389.9</td>\n",
       "      <td>0.796</td>\n",
       "      <td>-1054</td>\n",
       "      <td>-1034</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   F-statistic  Adj_R-squared   AIC   BIC\n",
       "0        259.9          0.796 -1051 -1023\n",
       "1        389.9          0.796 -1054 -1034"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "performance_stats"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From the above, we observe that model2 is slightly better than model1(based on the 3 rules from the bullet points). <br/>\n",
    "The target variable(Chance_of_Admit) is skewed. Let us transform it to a normal distribution and test the model again."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Transform to normal distribution using boxcox transformation.\n",
    "from scipy.stats import boxcox\n",
    "boxcox_Chance_of_Admit,_ = boxcox(df['Chance_of_Admit'])\n",
    "plt.figure(figsize=(6,5))\n",
    "plt.hist(boxcox_Chance_of_Admit)\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Still it is NOT a complete normal distribution but some what better than before. Let us rerun the model with the transformed target variable."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<b><font color='blue'>Model3<font/>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>OLS Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>    <td>boxcox_Chance_of_Admit</td> <th>  R-squared:         </th> <td>   0.818</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                      <td>OLS</td>          <th>  Adj. R-squared:    </th> <td>   0.816</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>                <td>Least Squares</td>     <th>  F-statistic:       </th> <td>   443.2</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>                <td>Tue, 21 May 2019</td>    <th>  Prob (F-statistic):</th> <td>1.49e-144</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                    <td>11:12:44</td>        <th>  Log-Likelihood:    </th> <td>  640.78</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Observations:</th>         <td>   400</td>         <th>  AIC:               </th> <td>  -1272.</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Residuals:</th>             <td>   395</td>         <th>  BIC:               </th> <td>  -1252.</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Model:</th>                 <td>     4</td>         <th>                     </th>     <td> </td>    \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>         <td>nonrobust</td>       <th>                     </th>     <td> </td>    \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "       <td></td>          <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>const</th>       <td>   -2.0358</td> <td>    0.081</td> <td>  -25.282</td> <td> 0.000</td> <td>   -2.194</td> <td>   -1.877</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>GRE_Score</th>   <td>    0.0019</td> <td>    0.000</td> <td>    4.400</td> <td> 0.000</td> <td>    0.001</td> <td>    0.003</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TOEFL_Score</th> <td>    0.0025</td> <td>    0.001</td> <td>    3.054</td> <td> 0.002</td> <td>    0.001</td> <td>    0.004</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>LOR</th>         <td>    0.0189</td> <td>    0.004</td> <td>    5.115</td> <td> 0.000</td> <td>    0.012</td> <td>    0.026</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CGPA</th>        <td>    0.0984</td> <td>    0.009</td> <td>   10.905</td> <td> 0.000</td> <td>    0.081</td> <td>    0.116</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "  <th>Omnibus:</th>       <td>82.852</td> <th>  Durbin-Watson:     </th> <td>   0.817</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Prob(Omnibus):</th> <td> 0.000</td> <th>  Jarque-Bera (JB):  </th> <td> 169.673</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Skew:</th>          <td>-1.098</td> <th>  Prob(JB):          </th> <td>1.43e-37</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Kurtosis:</th>      <td> 5.315</td> <th>  Cond. No.          </th> <td>1.10e+04</td>\n",
       "</tr>\n",
       "</table><br/><br/>Warnings:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.<br/>[2] The condition number is large, 1.1e+04. This might indicate that there are<br/>strong multicollinearity or other numerical problems."
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                              OLS Regression Results                              \n",
       "==================================================================================\n",
       "Dep. Variable:     boxcox_Chance_of_Admit   R-squared:                       0.818\n",
       "Model:                                OLS   Adj. R-squared:                  0.816\n",
       "Method:                     Least Squares   F-statistic:                     443.2\n",
       "Date:                    Tue, 21 May 2019   Prob (F-statistic):          1.49e-144\n",
       "Time:                            11:12:44   Log-Likelihood:                 640.78\n",
       "No. Observations:                     400   AIC:                            -1272.\n",
       "Df Residuals:                         395   BIC:                            -1252.\n",
       "Df Model:                               4                                         \n",
       "Covariance Type:                nonrobust                                         \n",
       "===============================================================================\n",
       "                  coef    std err          t      P>|t|      [0.025      0.975]\n",
       "-------------------------------------------------------------------------------\n",
       "const          -2.0358      0.081    -25.282      0.000      -2.194      -1.877\n",
       "GRE_Score       0.0019      0.000      4.400      0.000       0.001       0.003\n",
       "TOEFL_Score     0.0025      0.001      3.054      0.002       0.001       0.004\n",
       "LOR             0.0189      0.004      5.115      0.000       0.012       0.026\n",
       "CGPA            0.0984      0.009     10.905      0.000       0.081       0.116\n",
       "==============================================================================\n",
       "Omnibus:                       82.852   Durbin-Watson:                   0.817\n",
       "Prob(Omnibus):                  0.000   Jarque-Bera (JB):              169.673\n",
       "Skew:                          -1.098   Prob(JB):                     1.43e-37\n",
       "Kurtosis:                       5.315   Cond. No.                     1.10e+04\n",
       "==============================================================================\n",
       "\n",
       "Warnings:\n",
       "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
       "[2] The condition number is large, 1.1e+04. This might indicate that there are\n",
       "strong multicollinearity or other numerical problems.\n",
       "\"\"\""
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['boxcox_Chance_of_Admit'] = boxcox_Chance_of_Admit\n",
    "\n",
    "X = df.drop(['Chance_of_Admit','Research','University_Rating','SOP','boxcox_Chance_of_Admit'],axis = 1)\n",
    "Y = df['boxcox_Chance_of_Admit']\n",
    "\n",
    "X = sm.add_constant(X)\n",
    "model3 = sm.OLS(Y, X).fit()\n",
    "\n",
    "model3.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "# These values are taken from the above summary tables for model1, model2 and model3.\n",
    "performance_statistics = pd.DataFrame()\n",
    "performance_statistics['F-statistic'] = [259.9,389.9,443.2]\n",
    "performance_statistics['Adj_R-squared'] = [0.796,0.796,0.816]\n",
    "performance_statistics['AIC'] = [-1051,-1054,-1272]\n",
    "performance_statistics['BIC'] = [-1023,-1034,-1252]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>F-statistic</th>\n",
       "      <th>Adj_R-squared</th>\n",
       "      <th>AIC</th>\n",
       "      <th>BIC</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Model</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>model1</th>\n",
       "      <td>259.9</td>\n",
       "      <td>0.796</td>\n",
       "      <td>-1051</td>\n",
       "      <td>-1023</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>model2</th>\n",
       "      <td>389.9</td>\n",
       "      <td>0.796</td>\n",
       "      <td>-1054</td>\n",
       "      <td>-1034</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>model3</th>\n",
       "      <td>443.2</td>\n",
       "      <td>0.816</td>\n",
       "      <td>-1272</td>\n",
       "      <td>-1252</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        F-statistic  Adj_R-squared   AIC   BIC\n",
       "Model                                         \n",
       "model1        259.9          0.796 -1051 -1023\n",
       "model2        389.9          0.796 -1054 -1034\n",
       "model3        443.2          0.816 -1272 -1252"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "performance_statistics['Model'] = ['model1','model2','model3']\n",
    "performance_statistics.set_index('Model')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Wow!! After transforming target variable to normal distribution, model3's performance stats have been improved.<br/>\n",
    "It's time to make predictions now."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<b><font color='blue'>Making predictions."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>OLS Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>    <td>boxcox_Chance_of_Admit</td> <th>  R-squared:         </th> <td>   0.813</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                      <td>OLS</td>          <th>  Adj. R-squared:    </th> <td>   0.811</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>                <td>Least Squares</td>     <th>  F-statistic:       </th> <td>   343.1</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>                <td>Tue, 21 May 2019</td>    <th>  Prob (F-statistic):</th> <td>2.00e-113</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                    <td>11:12:46</td>        <th>  Log-Likelihood:    </th> <td>  512.37</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Observations:</th>         <td>   320</td>         <th>  AIC:               </th> <td>  -1015.</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Residuals:</th>             <td>   315</td>         <th>  BIC:               </th> <td>  -995.9</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Model:</th>                 <td>     4</td>         <th>                     </th>     <td> </td>    \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>         <td>nonrobust</td>       <th>                     </th>     <td> </td>    \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "       <td></td>          <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>const</th>       <td>   -2.0375</td> <td>    0.090</td> <td>  -22.692</td> <td> 0.000</td> <td>   -2.214</td> <td>   -1.861</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>GRE_Score</th>   <td>    0.0021</td> <td>    0.000</td> <td>    4.372</td> <td> 0.000</td> <td>    0.001</td> <td>    0.003</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TOEFL_Score</th> <td>    0.0022</td> <td>    0.001</td> <td>    2.389</td> <td> 0.017</td> <td>    0.000</td> <td>    0.004</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>LOR</th>         <td>    0.0203</td> <td>    0.004</td> <td>    4.795</td> <td> 0.000</td> <td>    0.012</td> <td>    0.029</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CGPA</th>        <td>    0.0959</td> <td>    0.010</td> <td>    9.623</td> <td> 0.000</td> <td>    0.076</td> <td>    0.116</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "  <th>Omnibus:</th>       <td>57.725</td> <th>  Durbin-Watson:     </th> <td>   1.989</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Prob(Omnibus):</th> <td> 0.000</td> <th>  Jarque-Bera (JB):  </th> <td>  99.335</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Skew:</th>          <td>-1.017</td> <th>  Prob(JB):          </th> <td>2.69e-22</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Kurtosis:</th>      <td> 4.820</td> <th>  Cond. No.          </th> <td>1.09e+04</td>\n",
       "</tr>\n",
       "</table><br/><br/>Warnings:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.<br/>[2] The condition number is large, 1.09e+04. This might indicate that there are<br/>strong multicollinearity or other numerical problems."
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                              OLS Regression Results                              \n",
       "==================================================================================\n",
       "Dep. Variable:     boxcox_Chance_of_Admit   R-squared:                       0.813\n",
       "Model:                                OLS   Adj. R-squared:                  0.811\n",
       "Method:                     Least Squares   F-statistic:                     343.1\n",
       "Date:                    Tue, 21 May 2019   Prob (F-statistic):          2.00e-113\n",
       "Time:                            11:12:46   Log-Likelihood:                 512.37\n",
       "No. Observations:                     320   AIC:                            -1015.\n",
       "Df Residuals:                         315   BIC:                            -995.9\n",
       "Df Model:                               4                                         \n",
       "Covariance Type:                nonrobust                                         \n",
       "===============================================================================\n",
       "                  coef    std err          t      P>|t|      [0.025      0.975]\n",
       "-------------------------------------------------------------------------------\n",
       "const          -2.0375      0.090    -22.692      0.000      -2.214      -1.861\n",
       "GRE_Score       0.0021      0.000      4.372      0.000       0.001       0.003\n",
       "TOEFL_Score     0.0022      0.001      2.389      0.017       0.000       0.004\n",
       "LOR             0.0203      0.004      4.795      0.000       0.012       0.029\n",
       "CGPA            0.0959      0.010      9.623      0.000       0.076       0.116\n",
       "==============================================================================\n",
       "Omnibus:                       57.725   Durbin-Watson:                   1.989\n",
       "Prob(Omnibus):                  0.000   Jarque-Bera (JB):               99.335\n",
       "Skew:                          -1.017   Prob(JB):                     2.69e-22\n",
       "Kurtosis:                       4.820   Cond. No.                     1.09e+04\n",
       "==============================================================================\n",
       "\n",
       "Warnings:\n",
       "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
       "[2] The condition number is large, 1.09e+04. This might indicate that there are\n",
       "strong multicollinearity or other numerical problems.\n",
       "\"\"\""
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "\n",
    "X = df.drop(['Chance_of_Admit','Research','University_Rating','SOP','boxcox_Chance_of_Admit'],axis = 1)\n",
    "Y = df['boxcox_Chance_of_Admit']\n",
    "\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size = 0.2, random_state = 450)\n",
    "X_train = sm.add_constant(X_train)\n",
    "\n",
    "model4 = sm.OLS(y_train, X_train).fit()\n",
    "model4.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# We add constant to the model as it's a best practice to do so every time!\n",
    "X_test = sm.add_constant(X_test)\n",
    "\n",
    "# We are making predictions here\n",
    "y_preds = model4.predict(X_test)\n",
    "\n",
    "plt.scatter(y_test, y_preds)\n",
    "plt.plot(y_test, y_test, color=\"red\")\n",
    "plt.xlabel(\"true values\")\n",
    "plt.ylabel(\"predicted values\")\n",
    "plt.title(\"Charges: true and predicted values\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In the graph, we see that our model predicts the higher values of the target better than the lower values. By using visualizations like this, we can more intuitively understand the performance of the models. But, we need to find more accurate ways of assessing our models. Let us find out some metrics to evaluate how good the predictions are. Below are those metrics."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean absolute error of the prediction is: 0.034912971171279554\n",
      "Mean squared error of the prediction is: 0.002375850238473301\n",
      "Root mean squared error of the prediction is: 0.04874269420614028\n",
      "Mean absolute percentage error of the prediction is: 19.33819176289874\n"
     ]
    }
   ],
   "source": [
    "from statsmodels.tools.eval_measures import mse, rmse\n",
    "from sklearn.metrics import mean_absolute_error\n",
    "\n",
    "print(\"Mean absolute error of the prediction is: {}\".format(mean_absolute_error(y_test, y_preds)))\n",
    "print(\"Mean squared error of the prediction is: {}\".format(mse(y_test, y_preds)))\n",
    "print(\"Root mean squared error of the prediction is: {}\".format(rmse(y_test, y_preds)))\n",
    "print(\"Mean absolute percentage error of the prediction is: {}\".format(np.mean(np.abs((y_test - y_preds) / y_test)) * 100))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Transform to normal distribution using boxcox transformation.\n",
    "boxcox_TOEFL_Score,_ = boxcox(df['TOEFL_Score'])\n",
    "plt.figure(figsize=(6,5))\n",
    "plt.hist(boxcox_TOEFL_Score)\n",
    "plt.title(\"Distribution of TOEFL_Score\")\n",
    "plt.show()\n",
    "\n",
    "boxcox_GRE_Score,_ = boxcox(df['GRE_Score'])\n",
    "plt.figure(figsize=(6,5))\n",
    "plt.hist(boxcox_GRE_Score)\n",
    "plt.title(\"Distribution of GRE_Score\")\n",
    "plt.show()\n",
    "\n",
    "boxcox_CGPA,_ = boxcox(df['CGPA'])\n",
    "plt.figure(figsize=(6,5))\n",
    "plt.hist(boxcox_CGPA)\n",
    "plt.title(\"Distribution of CGPA\")\n",
    "plt.show()\n",
    "\n",
    "boxcox_LOR,_ = boxcox(df['LOR'])\n",
    "plt.figure(figsize=(6,5))\n",
    "plt.hist(boxcox_LOR)\n",
    "plt.title(\"Distribution of LOR\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [],
   "source": [
    "df['boxcox_TOEFL_Score'] = boxcox_TOEFL_Score\n",
    "df['boxcox_GRE_Score'] = boxcox_GRE_Score\n",
    "df['boxcox_CGPA'] = boxcox_CGPA\n",
    "df['boxcox_LOR'] = boxcox_LOR"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>GRE_Score</th>\n",
       "      <th>TOEFL_Score</th>\n",
       "      <th>University_Rating</th>\n",
       "      <th>SOP</th>\n",
       "      <th>LOR</th>\n",
       "      <th>CGPA</th>\n",
       "      <th>Research</th>\n",
       "      <th>Chance_of_Admit</th>\n",
       "      <th>boxcox_Chance_of_Admit</th>\n",
       "      <th>boxcox_TOEFL_Score</th>\n",
       "      <th>boxcox_GRE_Score</th>\n",
       "      <th>boxcox_CGPA</th>\n",
       "      <th>boxcox_LOR</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>337</td>\n",
       "      <td>118</td>\n",
       "      <td>4</td>\n",
       "      <td>4.5</td>\n",
       "      <td>4.5</td>\n",
       "      <td>9.65</td>\n",
       "      <td>1</td>\n",
       "      <td>0.92</td>\n",
       "      <td>-0.078017</td>\n",
       "      <td>18.641797</td>\n",
       "      <td>10889.076610</td>\n",
       "      <td>14.337933</td>\n",
       "      <td>3.717793</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>324</td>\n",
       "      <td>107</td>\n",
       "      <td>4</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.5</td>\n",
       "      <td>8.87</td>\n",
       "      <td>1</td>\n",
       "      <td>0.76</td>\n",
       "      <td>-0.221742</td>\n",
       "      <td>17.686373</td>\n",
       "      <td>10189.833412</td>\n",
       "      <td>12.748801</td>\n",
       "      <td>3.717793</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>316</td>\n",
       "      <td>104</td>\n",
       "      <td>3</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3.5</td>\n",
       "      <td>8.00</td>\n",
       "      <td>1</td>\n",
       "      <td>0.72</td>\n",
       "      <td>-0.254997</td>\n",
       "      <td>17.417073</td>\n",
       "      <td>9768.965708</td>\n",
       "      <td>11.028470</td>\n",
       "      <td>2.624772</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>322</td>\n",
       "      <td>110</td>\n",
       "      <td>3</td>\n",
       "      <td>3.5</td>\n",
       "      <td>2.5</td>\n",
       "      <td>8.67</td>\n",
       "      <td>1</td>\n",
       "      <td>0.80</td>\n",
       "      <td>-0.187395</td>\n",
       "      <td>17.951794</td>\n",
       "      <td>10083.939249</td>\n",
       "      <td>12.348329</td>\n",
       "      <td>1.551909</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>314</td>\n",
       "      <td>103</td>\n",
       "      <td>2</td>\n",
       "      <td>2.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>8.21</td>\n",
       "      <td>0</td>\n",
       "      <td>0.65</td>\n",
       "      <td>-0.310497</td>\n",
       "      <td>17.326416</td>\n",
       "      <td>9664.880469</td>\n",
       "      <td>11.438494</td>\n",
       "      <td>2.085454</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   GRE_Score  TOEFL_Score  University_Rating  SOP  LOR  CGPA  Research  \\\n",
       "0        337          118                  4  4.5  4.5  9.65         1   \n",
       "1        324          107                  4  4.0  4.5  8.87         1   \n",
       "2        316          104                  3  3.0  3.5  8.00         1   \n",
       "3        322          110                  3  3.5  2.5  8.67         1   \n",
       "4        314          103                  2  2.0  3.0  8.21         0   \n",
       "\n",
       "   Chance_of_Admit  boxcox_Chance_of_Admit  boxcox_TOEFL_Score  \\\n",
       "0             0.92               -0.078017           18.641797   \n",
       "1             0.76               -0.221742           17.686373   \n",
       "2             0.72               -0.254997           17.417073   \n",
       "3             0.80               -0.187395           17.951794   \n",
       "4             0.65               -0.310497           17.326416   \n",
       "\n",
       "   boxcox_GRE_Score  boxcox_CGPA  boxcox_LOR  \n",
       "0      10889.076610    14.337933    3.717793  \n",
       "1      10189.833412    12.748801    3.717793  \n",
       "2       9768.965708    11.028470    2.624772  \n",
       "3      10083.939249    12.348329    1.551909  \n",
       "4       9664.880469    11.438494    2.085454  "
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>OLS Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>    <td>boxcox_Chance_of_Admit</td> <th>  R-squared:         </th> <td>   0.814</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                      <td>OLS</td>          <th>  Adj. R-squared:    </th> <td>   0.812</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>                <td>Least Squares</td>     <th>  F-statistic:       </th> <td>   344.8</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>                <td>Tue, 21 May 2019</td>    <th>  Prob (F-statistic):</th> <td>1.06e-113</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                    <td>11:12:49</td>        <th>  Log-Likelihood:    </th> <td>  513.01</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Observations:</th>         <td>   320</td>         <th>  AIC:               </th> <td>  -1016.</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Residuals:</th>             <td>   315</td>         <th>  BIC:               </th> <td>  -997.2</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Model:</th>                 <td>     4</td>         <th>                     </th>     <td> </td>    \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>         <td>nonrobust</td>       <th>                     </th>     <td> </td>    \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "           <td></td>             <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>const</th>              <td>   -1.6967</td> <td>    0.124</td> <td>  -13.701</td> <td> 0.000</td> <td>   -1.940</td> <td>   -1.453</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>boxcox_TOEFL_Score</th> <td>    0.0232</td> <td>    0.010</td> <td>    2.293</td> <td> 0.023</td> <td>    0.003</td> <td>    0.043</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>boxcox_GRE_Score</th>   <td> 4.048e-05</td> <td> 9.24e-06</td> <td>    4.378</td> <td> 0.000</td> <td> 2.23e-05</td> <td> 5.87e-05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>boxcox_CGPA</th>        <td>    0.0487</td> <td>    0.005</td> <td>    9.667</td> <td> 0.000</td> <td>    0.039</td> <td>    0.059</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>boxcox_LOR</th>         <td>    0.0188</td> <td>    0.004</td> <td>    4.800</td> <td> 0.000</td> <td>    0.011</td> <td>    0.026</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "  <th>Omnibus:</th>       <td>56.985</td> <th>  Durbin-Watson:     </th> <td>   1.987</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Prob(Omnibus):</th> <td> 0.000</td> <th>  Jarque-Bera (JB):  </th> <td>  97.547</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Skew:</th>          <td>-1.008</td> <th>  Prob(JB):          </th> <td>6.57e-22</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Kurtosis:</th>      <td> 4.804</td> <th>  Cond. No.          </th> <td>4.43e+05</td>\n",
       "</tr>\n",
       "</table><br/><br/>Warnings:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.<br/>[2] The condition number is large, 4.43e+05. This might indicate that there are<br/>strong multicollinearity or other numerical problems."
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                              OLS Regression Results                              \n",
       "==================================================================================\n",
       "Dep. Variable:     boxcox_Chance_of_Admit   R-squared:                       0.814\n",
       "Model:                                OLS   Adj. R-squared:                  0.812\n",
       "Method:                     Least Squares   F-statistic:                     344.8\n",
       "Date:                    Tue, 21 May 2019   Prob (F-statistic):          1.06e-113\n",
       "Time:                            11:12:49   Log-Likelihood:                 513.01\n",
       "No. Observations:                     320   AIC:                            -1016.\n",
       "Df Residuals:                         315   BIC:                            -997.2\n",
       "Df Model:                               4                                         \n",
       "Covariance Type:                nonrobust                                         \n",
       "======================================================================================\n",
       "                         coef    std err          t      P>|t|      [0.025      0.975]\n",
       "--------------------------------------------------------------------------------------\n",
       "const                 -1.6967      0.124    -13.701      0.000      -1.940      -1.453\n",
       "boxcox_TOEFL_Score     0.0232      0.010      2.293      0.023       0.003       0.043\n",
       "boxcox_GRE_Score    4.048e-05   9.24e-06      4.378      0.000    2.23e-05    5.87e-05\n",
       "boxcox_CGPA            0.0487      0.005      9.667      0.000       0.039       0.059\n",
       "boxcox_LOR             0.0188      0.004      4.800      0.000       0.011       0.026\n",
       "==============================================================================\n",
       "Omnibus:                       56.985   Durbin-Watson:                   1.987\n",
       "Prob(Omnibus):                  0.000   Jarque-Bera (JB):               97.547\n",
       "Skew:                          -1.008   Prob(JB):                     6.57e-22\n",
       "Kurtosis:                       4.804   Cond. No.                     4.43e+05\n",
       "==============================================================================\n",
       "\n",
       "Warnings:\n",
       "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
       "[2] The condition number is large, 4.43e+05. This might indicate that there are\n",
       "strong multicollinearity or other numerical problems.\n",
       "\"\"\""
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "X1 = df.drop(['Chance_of_Admit','Research','University_Rating','SOP',\n",
    "             'TOEFL_Score','GRE_Score','CGPA','boxcox_Chance_of_Admit','LOR'],axis = 1)\n",
    "Y1 = df['boxcox_Chance_of_Admit']\n",
    "\n",
    "X_train1, X_test1, y_train1, y_test1 = train_test_split(X1, Y1, test_size = 0.2, random_state = 450)\n",
    "X_train1 = sm.add_constant(X_train1)\n",
    "\n",
    "model5 = sm.OLS(y_train1, X_train1).fit()\n",
    "model5.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# We add constant to the model as it's a best practice to do so every time!\n",
    "X_test1 = sm.add_constant(X_test1)\n",
    "\n",
    "# We are making predictions here\n",
    "y_preds1 = model5.predict(X_test1)\n",
    "\n",
    "plt.scatter(y_test1, y_preds1)\n",
    "plt.plot(y_test1, y_test1, color=\"red\")\n",
    "plt.xlabel(\"true values\")\n",
    "plt.ylabel(\"predicted values\")\n",
    "plt.title(\"Charges: true and predicted values\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean absolute error of the prediction is: 0.034700915500579424\n",
      "Mean squared error of the prediction is: 0.002361458821726707\n",
      "Root mean squared error of the prediction is: 0.048594843571378096\n",
      "Mean absolute percentage error of the prediction is: 19.021464582678973\n"
     ]
    }
   ],
   "source": [
    "print(\"Mean absolute error of the prediction is: {}\".format(mean_absolute_error(y_test1, y_preds1)))\n",
    "print(\"Mean squared error of the prediction is: {}\".format(mse(y_test1, y_preds1)))\n",
    "print(\"Root mean squared error of the prediction is: {}\".format(rmse(y_test1, y_preds1)))\n",
    "print(\"Mean absolute percentage error of the prediction is: {}\".format(np.mean(np.abs((y_test1 - y_preds1) / y_test1)) * 100))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Root mean squared error of MODEL4 and MODEL5 are 0.04874269420614028  and  0.048594843571378096\n"
     ]
    }
   ],
   "source": [
    "print(\"Root mean squared error of MODEL4 and MODEL5 are {}  and  {}\".format(rmse(y_test, y_preds),rmse(y_test1, y_preds1)))\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can observe that RMSE for model5 is slightly decreased due to transforming independent variables(features) to normal distributions."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
